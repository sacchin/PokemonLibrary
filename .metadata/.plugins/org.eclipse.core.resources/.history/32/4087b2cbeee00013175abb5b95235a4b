package com.gmail.sacchin.pockemonbattletools.http;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;

import net.vvakame.util.jsonpullparser.JsonFormatException;

import com.gmail.sacchin.pockemonbattletools.entity.Test;
import com.gmail.sacchin.pockemonbattletools.entity.TestGen;

import android.util.Log;

public class PGLGetter implements Runnable {

	private final static String URL = "http://3ds.pokemon-gl.com/frontendApi/gbu/getSeasonPokemonDetail";

	public String doPost(int pockemonNo) {
		StringBuilder result = new StringBuilder();

		DefaultHttpClient client = new DefaultHttpClient();
		HttpPost method = new HttpPost(URL);
		method.setHeader("Referer", "http://3ds.pokemon-gl.com/battle/");

		// リクエストパラメータの設定
		List<NameValuePair> params = new ArrayList<NameValuePair>();	    
		params.add(new BasicNameValuePair("languageId", "1"));
		params.add(new BasicNameValuePair("seasonId", "3"));
		params.add(new BasicNameValuePair("battleType", "0"));
		params.add(new BasicNameValuePair("timezone", "JST"));
		params.add(new BasicNameValuePair("pokemonId", pockemonNo + "-0"));
		//	    params.add(new BasicNameValuePair("displayNumberWaza", "10"));
		//	    params.add(new BasicNameValuePair("displayNumberTokusei", "10"));
		//	    params.add(new BasicNameValuePair("displayNumberSeikaku", "10"));
		//	    params.add(new BasicNameValuePair("displayNumberItem", "10"));
		//	    params.add(new BasicNameValuePair("displayNumberLevel", "10"));
		//	    params.add(new BasicNameValuePair("displayNumberPokemonIn", "10"));
		try {
			method.setEntity(new UrlEncodedFormEntity(params, "utf-8"));
			HttpResponse response = client.execute(method);

			switch (response.getStatusLine().getStatusCode()) {
			case HttpStatus.SC_OK:
				Log.d("PGLGetter", "レスポンス取得に成功");
				//				BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), "UTF-8"));
				//				while(true){
				//					String temp = reader.readLine();
				//					if(temp == null){
				//						break;
				//					}
				//					Log.e("result", "" + result.length());
				//					result.append(temp);
				//				}
				Log.e("result2", "" + EntityUtils.toString(response.getEntity(), "UTF-8").length());
			case HttpStatus.SC_NOT_FOUND:
				Log.e("PGLGetter", "データが存在しない");

			default:
				Log.e("PGLGetter", "通信エラー");
			}

		} catch (ClientProtocolException e) {
			return "Error:" + e.getStackTrace();
		} catch (IOException e) {
			return "Error:" + e.getStackTrace();
		} catch (Exception e) {
			return "Error:" + e.getStackTrace();
		}
		return "";
	}

	@Override
	public void run() {
		try {
			String jsonStr = get(303);
			//String jsonStr = doPost(303);
			if(jsonStr != null && !jsonStr.isEmpty()){
				Log.e("result", "" + jsonStr.length());
				Test t = TestGen.get(jsonStr);
			}
		} catch (IOException e) {
			e.printStackTrace();
		} catch (JsonFormatException e) {
			e.printStackTrace();
		}
	}

	public static URLConnection createURLConnection(URL url) throws IOException {
		URLConnection uc = url.openConnection();
		uc.setDoOutput(true);//POST可能にする
		uc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");
		uc.setRequestProperty("Referer", "http://3ds.pokemon-gl.com/battle/");
		return uc;
	}

	public static String get(int pockemonNo) throws IOException {
		String s = "";
		try {
			URL url = new URL(URL);
			URLConnection uc = createURLConnection(url);
			OutputStream os = uc.getOutputStream();//POST用のOutputStreamを取得

			// ヘッダを設定
			String postStr = "languageId=1&" + 
					"seasonId=3&" + 
					"battleType=0&" + 
					"timezone=JST&" + 
					"pokemonId=" + pockemonNo + "-0&" + 
					"displayNumberWaza=10&" + 
					"displayNumberTokusei=3&" + 
					"displayNumberSeikaku=10&" + 
					"displayNumberItem=10&";
			PrintStream ps = new PrintStream(os);
			ps.print(postStr);//データをPOSTする
			ps.close();

			InputStream is = uc.getInputStream();//POSTした結果を取得
//			BufferedReader reader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
//			while ((s = reader.readLine()) != null) {
//				Log.e("while", s);
//			}
			InputStreamReader reader = new InputStreamReader(is, "UTF-8");
			int i = 0, count = 0;
			while ((i = reader.read()) != -1) {
				count++;
			}
			reader.close();
			Log.e("while", s);
			return s;
		} catch (MalformedURLException e) {
			Log.e("result", "Invalid URL format: " + URL);
		} catch (IOException e) {
			Log.e("result", "Can't connect to " + URL);
		}

		return s;
	}
}
